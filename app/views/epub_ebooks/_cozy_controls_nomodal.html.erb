    // setup logging methods and click event listeners
    // any panel to be displayed in .nm--toolbar needs to be defined here
    var actions = {}; var panels = {};
    var $panels = document.querySelector('.nm--panels');

    panels.close = document.querySelector('.panel--close');
    panels.contents = document.querySelector('.panel--contents');
    panels.search = document.querySelector('.panel--search');
    panels.info = document.querySelector('.panel--info');
    panels.notes = document.querySelector('.panel--notes');
    
    actions.close = document.querySelector('#action-close');
    actions.contents = document.querySelector('#action-contents');
    actions.search = document.querySelector('#action-search');
    actions.info = document.querySelector('#action-info');
    actions.notes = document.querySelector('#action-notes');

    let fn;

    // event listeners for contents
    actions.contents.addEventListener('click', (event) => {
      // panels.contents.setAttribute('aria-hidden',
      //   !(panels.contents.getAttribute('aria-hidden') == 'true'));

      // check to see if button action is open or closed
      if ( actions.contents.hasAttribute("data-modal-open") ) {
        actions.contents.setAttribute("data-modal-close", "");
        actions.contents.removeAttribute("data-modal-open");
      } else {
        actions.contents.setAttribute("data-modal-open", "");
        actions.contents.removeAttribute("data-modal-close");
      }

      if ( actions.contents.hasAttribute("data-modal-close") ) {
          //this.closePanel;
      }

      console.log("??", fn);
      if ( fn === undefined ) {
        fn = controls.contents._modal.callbacks.onClose;
        controls.contents._modal.callbacks.onClose = function (modal) {
          console.log("??", fn);
          fn(modal);
          setTimeout(function () {
            console.log("-- should be resizing");
            window.dispatchEvent(new Event('resize'));
          }, 100);
        }
      }
    
      setTimeout(function () {
        window.dispatchEvent(new Event('resize'));
      }, 0);

    })

    //event listeners for search
    actions.search.addEventListener('click', (event) => {
      // panels.search.setAttribute('aria-hidden',
      //   !(panels.search.getAttribute('aria-hidden') == 'true'));

      console.log("??", fn);
      if ( fn === undefined ) {
        fn = controls.contents._modal.callbacks.onClose;
        controls.contents._modal.callbacks.onClose = function (modal) {
          console.log("??", fn);
          fn(modal);
          setTimeout(function () {
            console.log("-- should be resizing");
            window.dispatchEvent(new Event('resize'));
          }, 100);
        }
      }
    
      setTimeout(function () {
        window.dispatchEvent(new Event('resize'));
      }, 0);

    })

    // event listeners for notes
    actions.contents.addEventListener('click', (event) => {
      // panels.notes.setAttribute('aria-hidden',
      //   !(panels.notes.getAttribute('aria-hidden') == 'true'));

      // check to see if button action is open or closed
      if ( actions.notes.hasAttribute("data-modal-open") ) {
        actions.notes.setAttribute("data-modal-close", "");
        actions.notes.removeAttribute("data-modal-open");
      } else {
        actions.notes.setAttribute("data-modal-open", "");
        actions.notes.removeAttribute("data-modal-close");
      }

      if ( actions.notes.hasAttribute("data-modal-close") ) {
          //this.closePanel;
      }

      console.log("??", fn);
      if ( fn === undefined ) {
        fn = controls.notes._modal.callbacks.onClose;
        controls.notess._modal.callbacks.onClose = function (modal) {
          console.log("??", fn);
          fn(modal);
          setTimeout(function () {
            console.log("-- should be resizing");
            window.dispatchEvent(new Event('resize'));
          }, 100);
        }
      }
    
      setTimeout(function () {
        window.dispatchEvent(new Event('resize'));
      }, 0);

    })