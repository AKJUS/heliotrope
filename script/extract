#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'
require 'ostruct'

options = OpenStruct.new
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: extract [-d <path>] <monograph_id>"
  opts.on('-d', '--directory [path]', 'Directory to output files') do |path|
    options.path = path
    unless File.exist?(path)
      puts "Directory #{path} must exist!"
      exit(1)
    end
    unless File.directory?(path)
      puts "The path #{path} must be a directory!"
      exit(2)
    end
    unless File.writable?(path)
      puts "The directory #{path} must be writable!"
      exit(3)
    end
  end
  opts.on_tail('-h', '--help', 'Print this help message') do
    puts opts
    exit 0
  end
end
option_parser.parse!(ARGV)

if ARGV.empty?
  puts option_parser.help
else
  require File.expand_path('../config/environment', __dir__)
  require 'export'
  monograph_ids = ARGV
  pwd = Dir.pwd
  Dir.chdir(options.path) if options.path.present?

  for id in monograph_ids do
    begin
      unless ValidationService.valid_noid?(id)
        puts "Skipping #{id}. It is not a valid NOID."
        next
      end
      if Monograph.where(id: id).count.zero?
        puts "Skipping #{id}. No Monograph found using this NOID."
        next
      end
      puts "Extracting Monograph with NOID #{id}."

      Export::Exporter.new(id).extract
    rescue StandardError => e
      STDERR.puts e.message
    end
  end

  Dir.chdir(pwd)
  exit!(0)
end
